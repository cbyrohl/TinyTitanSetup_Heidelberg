---
- name: Generate and distribute SSH keys among hosts
  hosts: all
  remote_user: root
  become: yes
  gather_facts: no

  tasks:
    - name: generate ssh if not present 
      ansible.builtin.openssh_keypair:
        path: "/home/tiny/.ssh/id_rsa"
        type: rsa
        size: 2048
        state: present
        force: no

    - name: Ensure directory exists for authorized_keys and correct permissions
      ansible.builtin.file:
        path: "/home/tiny/.ssh"
        state: directory
        mode: '0700'
        owner: "tiny"
        group: "tiny"

    - name: Ensure id_rsa and correct permissions
      ansible.builtin.file:
        path: "/home/tiny/.ssh/id_rsa"
        state: file 
        mode: '0600'
        owner: "tiny"
        group: "tiny"

    - name: Ensure id_rsa.pub and correct permissions
      ansible.builtin.file:
        path: "/home/tiny/.ssh/id_rsa.pub"
        state: file 
        mode: '0600'
        owner: "tiny"
        group: "tiny"


    - name: fetch all public ssh keys
      shell: cat /home/tiny/.ssh/id_rsa.pub
      register: ssh_keys
      tags:
        - ssh

    - name: check keys
      debug: msg="{{ ssh_keys.stdout }}"
      tags:
        - ssh

    - name: deploy keys on all servers
      authorized_key: user=tiny key="{{ item[0] }}"
      delegate_to: "{{ item[1] }}"
      with_nested:
        - "{{ ssh_keys.stdout }}"
        - "{{ groups['all'] }}"
      tags:
        - ssh


#
#
#    - name: Fetch public keys from all hosts
#      ansible.builtin.fetch:
#        src: "/home/tiny/.ssh/id_rsa.pub"
#        dest: "/tmp/ssh_keys/{{ inventory_hostname }}_id_rsa.pub"
#        flat: yes  # Use flat to store the file directly under specified directory without additional subdirectories
#      delegate_to: "{{ item }}"
#      loop: "{{ ansible_play_hosts }}"
#

#    - name: Ensure authorized_keys exists and permissions are correct
#      ansible.builtin.file:
#        path: "/home/tiny/.ssh/authorized_keys"
#        state: touch
#        mode: '0600'
#        owner: "tiny"
#        group: "tiny"
#
#    - name: Distribute each host's public key to all other hosts' authorized_keys
#      ansible.builtin.lineinfile:
#        path: "/home/tiny/.ssh/authorized_keys"
#        line: "{{ lookup('file', '/tmp/ssh_keys/' + item + '_id_rsa.pub') }}"
#        state: present
#      loop: "{{ ansible_play_hosts }}"
#      when: inventory_hostname != item

#---
#- name: Generate and distribute SSH keys among hosts
#  hosts: all
#  become: yes
#  gather_facts: no
#
#  tasks:
#    - name: Generate SSH key on each host if not already present
#      ansible.builtin.openssh_keypair:
#        path: "/home/tiny/.ssh/id_rsa"
#        type: rsa
#        size: 2048
#        state: present
#        force: no
#
#    - name: Fetch public keys from all hosts
#      ansible.builtin.fetch:
#        src: "/home/tiny/.ssh/id_rsa.pub"
#        dest: "/tmp/ssh_keys/{{ inventory_hostname }}_id_rsa.pub"
#        flat: yes
#      delegate_to: "{{ item }}"
#      loop: "{{ ansible_play_hosts }}"
#
#    - name: Distribute each host's public key to all other hosts' authorized_keys
#      ansible.builtin.authorized_key:
#        user: "tiny"
#        state: present
#        key: "{{ lookup('file', '/tmp/ssh_keys/' + item + '_id_rsa.pub') }}"
#      loop: "{{ ansible_play_hosts }}"
#      when: inventory_hostname != item

#---
#- name: Generate and distribute SSH keys among all hosts
#  hosts: all
#  become: yes
#  gather_facts: no
#
#  tasks:
#    - name: Generate SSH key on each host if not already present
#      ansible.builtin.openssh_keypair:
#        path: "/home/tiny/.ssh/id_rsa"
#        type: rsa
#        size: 2048
#        state: present
#        force: no
#
#    - name: Fetch public keys from all hosts
#      ansible.builtin.fetch:
#        src: "/home/tiny/.ssh/id_rsa.pub"
#        dest: "/tmp/ssh_keys/{{ inventory_hostname }}_id_rsa.pub"
#        flat: yes
#      delegate_to: "{{ item }}"
#      loop: "{{ ansible_play_hosts }}"
#
#    - name: Distribute each host's public key to all other hosts
#      ansible.builtin.authorized_key:
#        user: "tiny"
#        state: present
#        key: "{{ lookup('file', '/tmp/ssh_keys/' + item + '_id_rsa.pub') }}"
#      loop: "{{ ansible_play_hosts }}"
#      when: inventory_hostname != item
#

#---
#- name: Gather all SSH keys to the control machine
#  hosts: all
#  become: yes
#  gather_facts: no
#  tasks:
#    - name: Generate SSH key on each host if not already present
#      ansible.builtin.openssh_keypair:
#        path: "/home/tiny/.ssh/id_rsa"
#        type: rsa
#        size: 2048
#        state: present
#        force: no
#
#    - name: Fetch public keys from each host
#      ansible.builtin.fetch:
#        src: "/home/tiny/.ssh/id_rsa.pub"
#        dest: "/tmp/ssh_keys/{{ inventory_hostname }}_rsa.pub"
#        flat: yes
#
#- name: Distribute all SSH keys to every host
#  hosts: all
#  become: yes
#  gather_facts: no
#  tasks:
#    - name: Read each key and distribute to authorized_keys
#      ansible.builtin.authorized_key:
#        user: "tiny"
#        state: present
#        key: "{{ lookup('file', item) }}"
#      loop: "{{ groups['all'] | map('extract', hostvars, ['ansible_facts', 'env', 'HOME']) | map('regex_replace', '$', '/.ssh/id_rsa.pub') | list }}"
#      delegate_to: "{{ inventory_hostname }}"
#      when: inventory_hostname != item | regex_replace('/home/tiny/.ssh/id_rsa.pub', '')


